/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _PLACE_AIRPORT_H_RPCGEN
#define _PLACE_AIRPORT_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


typedef struct airport_node *airport_list;
#define MAXLEN 255

typedef char *string_type;

struct airport_node {
	string_type code;
	string_type name;
	string_type state;
	string_type distance;
	airport_list next;
};
typedef struct airport_node airport_node;

struct lat_long_input {
	float lat;
	float longitude;
};
typedef struct lat_long_input lat_long_input;

struct airport_ret {
	int err;
	union {
		airport_list list;
	} airport_ret_u;
};
typedef struct airport_ret airport_ret;

#define DIRPROG 0x31717172
#define DIR_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define airport_lookup 1
extern  airport_ret * airport_lookup_1(lat_long_input *, CLIENT *);
extern  airport_ret * airport_lookup_1_svc(lat_long_input *, struct svc_req *);
extern int dirprog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define airport_lookup 1
extern  airport_ret * airport_lookup_1();
extern  airport_ret * airport_lookup_1_svc();
extern int dirprog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_airport_list (XDR *, airport_list*);
extern  bool_t xdr_string_type (XDR *, string_type*);
extern  bool_t xdr_airport_node (XDR *, airport_node*);
extern  bool_t xdr_lat_long_input (XDR *, lat_long_input*);
extern  bool_t xdr_airport_ret (XDR *, airport_ret*);

#else /* K&R C */
extern bool_t xdr_airport_list ();
extern bool_t xdr_string_type ();
extern bool_t xdr_airport_node ();
extern bool_t xdr_lat_long_input ();
extern bool_t xdr_airport_ret ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_PLACE_AIRPORT_H_RPCGEN */
